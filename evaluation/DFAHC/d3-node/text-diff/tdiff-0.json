Comparando os arquivos HC\0.js e HC\ORIGINAL.JS
***** HC\0.js
    1:  const jsDom = require('jsdom');
    2:  module.exports = D3Node;
    3:  function fixXmlCase(text) {
***** HC\ORIGINAL.JS
    1:  'use strict';
    2:  const jsDom = require('jsdom');
    3:  module.exports = D3Node;
    4:  module.exports.jsDom = jsDom;
    5:  function fixXmlCase(text) {
*****

***** HC\0.js
    5:      // https://github.com/tmpvar/jsdom/issues/620
    6:      var tagNames = ['radialGradient'];
    7:      for (var i = 0, l = tagNames.length; i < l; i++) {
***** HC\ORIGINAL.JS
    7:      // https://github.com/tmpvar/jsdom/issues/620
    8:      var tagNames = [
    9:          'linearGradient',
   10:          'radialGradient',
   11:          'clipPath',
   12:          'textPath'
   13:      ];
   14:      for (var i = 0, l = tagNames.length; i < l; i++) {
*****

***** HC\0.js
   14:  }
   15:  const defaults = { d3Module: require('d3') };
   16:  function D3Node(opts) {
***** HC\ORIGINAL.JS
   21:  }
   22:  const defaults = {
   23:      d3Module: require('d3'),
   24:      // to allow use of d3.v4
   25:      selector: '',
   26:      // selects base D3 Element
   27:      container: '',
   28:      // markup inserted in body
   29:      styles: ''    // embedded svg stylesheets
   30:  };
   31:  function D3Node(opts) {
*****

***** HC\0.js
   19:      if (opts && opts.svgStyles) {
   20:          options.styles = opts.svgStyles;
***** HC\ORIGINAL.JS
   34:      if (opts && opts.svgStyles) {
   35:          // deprecated svgStyles option
   36:          console.warn('WARNING: svgStyles is deprecated, please use styles instead !!');
   37:          options.styles = opts.svgStyles;
*****

***** HC\0.js
   23:      if (!(this instanceof D3Node)) {
   24:          return new D3Node();
   25:      }
***** HC\ORIGINAL.JS
   40:      if (!(this instanceof D3Node)) {
   41:          return new D3Node(options);
   42:      }
*****

***** HC\0.js
   37:      this.document = document;
   38:      this.d3Element = d3Element;
***** HC\ORIGINAL.JS
   54:      this.document = document;
   55:      this.window = document.defaultView;
   56:      this.d3Element = d3Element;
*****

***** HC\0.js
   50:  };
   51:  D3Node.prototype.svgString = function () {
***** HC\ORIGINAL.JS
   68:  };
   69:  // experimental method for creating 2d canvas
   70:  D3Node.prototype.createCanvas = function () {
   71:      if (!this.document.createElement('canvas').getContext('2d')) {
   72:          throw new Error('Install node-canvas for HTMLCanvasElement support.');
   73:      }
   74:      if (!this.document.querySelector('canvas')) {
   75:          return this.document.createElement('canvas');
   76:      } else {
   77:          return this.document.querySelector('canvas');
   78:      }
   79:  };
   80:  D3Node.prototype.svgString = function () {
*****

