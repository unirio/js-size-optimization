Comparing files JADE\RD\7.js and JADE\RD\ORIGINAL.JS
***** JADE\RD\7.js
   64:              var str = fs.readFileSync(filename, 'utf8');
   65:              return str;
***** JADE\RD\ORIGINAL.JS
   64:              var str = fs.readFileSync(filename, 'utf8');
   65:              debug_sources[filename] = str;
   66:              return str;
*****

***** JADE\RD\7.js
   80:      });
   81:      return {
***** JADE\RD\ORIGINAL.JS
   81:      });
   82:      // Debug compiler
   83:      if (options.debug) {
   84:          console.error('\nCompiled Function:\n\n\x1B[90m%s\x1B[0m', js.replace(/^/gm, '  '));
   85:      }
   86:      return {
*****

***** JADE\RD\7.js
  140:          includeSources: options.compileDebug === true,
  141:          templateName: 'template'
***** JADE\RD\ORIGINAL.JS
  145:          includeSources: options.compileDebug === true,
  146:          debug: options.debug,
  147:          templateName: 'template'
*****

***** JADE\RD\7.js
  178:      });
  179:      return { body: parsed.body };
  180:  };
***** JADE\RD\ORIGINAL.JS
  184:      });
  185:      return {
  186:          body: parsed.body,
  187:          dependencies: parsed.dependencies
  188:      };
  189:  };
*****

***** JADE\RD\7.js
  217:  };
  218:  exports.render = function (str, options, fn) {
***** JADE\RD\ORIGINAL.JS
  226:  };
  227:  /**
  228:   * Render the given `str` of pug.
  229:   *
  230:   * Options:
  231:   *
  232:   *   - `cache` enable template caching
  233:   *   - `filename` filename required for `include` / `extends` and caching
  234:   *
  235:   * @param {String} str
  236:   * @param {Object|Function} options or fn
  237:   * @param {Function|undefined} fn
  238:   * @returns {String}
  239:   * @api public
  240:   */
  241:  exports.render = function (str, options, fn) {
*****

***** JADE\RD\7.js
  280:      }
  281:      var str = fs.readFileSync(options.filename);
  282:      var out = exports.compileClient(str, options);
***** JADE\RD\ORIGINAL.JS
  303:      }
  304:      var str = fs.readFileSync(options.filename, 'utf8');
  305:      var out = exports.compileClient(str, options);
*****

***** JADE\RD\7.js
  291:      if (options.compileDebug == undefined && process.env.NODE_ENV === 'production') {
  292:      }
  293:  };
***** JADE\RD\ORIGINAL.JS
  314:      if (options.compileDebug == undefined && process.env.NODE_ENV === 'production') {
  315:          options.compileDebug = false;
  316:      }
  317:      exports.renderFile(path, options, fn);
  318:  };
*****

